/*
 * grunt-sass-compile-imports
 * https://github.com/bmds/grunt-sass-compile-imports
 *
 * Copyright (c) 2014 Barney Scott
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function(grunt) {
    grunt.registerMultiTask('sass_injection', 'Create an import file by scanning a directory for SASS files', function() {
      var importFiles = [
      ];
      var importTopFiles = [
      ];
      var files       = this.filesSrc;
      var options     = this.options({
          replacePath:     false,
          quiet:           false,
          removeExtension: true
      });

      // Check that the destination file exists
      if(!grunt.file.exists(this.data.target)) {
          grunt.file.write(this.data.target, '');
      }

      if (!options.quiet) {
          grunt.log.writeln('\nScanning for files to import\n');
      }
      // Loop through the files
      files.forEach(function (filepath) {
          // Remove the .scss extension
          if (options.removeExtension) {
              filepath = filepath.replace('.scss', '');
          }

          // Update the path generated by the tool
          if (options.replacePath !== false) {
              if(options.replacePath.hasOwnProperty('replace') && options.replacePath.hasOwnProperty('pattern')) {
                  filepath = filepath.replace(options.replacePath.pattern, options.replacePath.replace);
              } else {
                  // No so error out
                  grunt.log.warn('The replacePath property does not have the correct configuration!');
                  return false;
              }
          }
          if (filepath.indexOf('_') > -1 ) {
              if (filepath.indexOf('__') > -1 ) {
                importTopFiles.push('@import "' + filepath + '";');
              }
              else {
                 importFiles.push('@import "' + filepath + '";');
              }

            if (!options.quiet) {
              grunt.log.writeln('Importing: ' + filepath.cyan);
            }
          }
          
      });


      // Merge the import files
      importFiles = importFiles.join('\n');
      importTopFiles = importTopFiles.join('\n');

      var readFile = grunt.file.read(this.data.target);
      
      var begin = readFile.match('// import');
      var topBegin = readFile.match('// topImport');

      if (begin) {
        
        var end = readFile.match('// endimport').index;
        var startReplace = begin.index + begin[0].length;
        var content = readFile.substring(0, startReplace) + '\n' + importFiles + '\n' + readFile.substring(end, readFile.length); 

        if (topBegin) {
          var topEnd = readFile.match('// endtopImport').index;
          var startTopReplace = topBegin.index + topBegin[0].length;
          var contentAdd = content.substring(0, startTopReplace) + '\n' + importTopFiles + '\n' + content.substring(topEnd, content.length);
          grunt.file.write(this.data.target, contentAdd);
        }  
        else {
            grunt.file.write(this.data.target, content);
        }
      }

      else {
        if (topBegin) {
          var topEnd = readFile.match('// endtopImport').index;
          var startTopReplace = topBegin.index + topBegin[0].length;
          var contentAdd = readFile.substring(0, startTopReplace) + '\n' + importTopFiles + '\n' + readFile.substring(topEnd, readFile.length);
          grunt.file.write(this.data.target, contentAdd)
        }
      }

      if (begin || topBegin) {
        grunt.log.writeln('Imported: ' + files.length + ' files');
        if (!options.quiet) {
            grunt.log.writeln('\nImport file created');
        }
      }
      else {
        grunt.log.error('No import tags were found');
      }
    });

};